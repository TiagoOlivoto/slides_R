index %in% hsb_ind)
hsb_ind
index
index %in% hsb_ind)
index %in% hsb_ind)
any(index %in% hsb_ind)
hsb <- rgb_to_hsb(data.frame(R, G, B))
View(hsb)
ata.frame(R, G, B)
data.frame(R, G, B)
hsb <- rgb_to_hsb(data.frame(R = R, G = G, B = B))
data.frame(R = R, G = G, B = B)
hsb <- rgb_to_hsb(data.frame(R = c(R), G = c(G), B = c(B)))
View(hsb)
h <- hsb$h
s <- hsb$h
b <- hsb$h
indx %in% ind$Index
indx
indx <- index[[37]]
indx
indx %in% ind$Index
d <- EBImage::Image(eval(parse(text = as.character(ind$Equation[as.character(ind$Index)==indx]))))
plot(d)
d
as.character(ind$Index)==indx
as.character(ind$Index)==indx
as.character(ind$Index)==indx
ind$Index
indx
ind$Equation[as.character(ind$Index)==indx]
indx <- "NGRDI"
d <- EBImage::Image(eval(parse(text = as.character(ind$Equation[as.character(ind$Index)==indx]))))
plot(d)
h
s
R
View(R)
eval(parse(text = as.character(ind$Equation[as.character(ind$Index)==indx])))
help_h <- function(r, g, b){
rgbvals <- c(r, g, b)
# hue
if(max(rgbvals) ==  rgbvals[1]){
h <- 60*((g - b) / (max(r, g, b) - min(r, g, b)))
}
if(max(rgbvals) ==  rgbvals[2]){
h <- 60*(2 + ((b - r) / (max(r, g, b) - min(r, g, b))))
}
if(max(rgbvals) ==  rgbvals[3]){
h <- 60*(4 + ((r - g) / (max(r, g, b) - min(r, g, b))))
}
return(h)
}
help_s <- function(r, g, b){
(max(r, g, b) - min(r, g, b)) / max(r, g, b) *100
}
help_b <- function(r, g, b){
max(r, g, b)  * 100
}
h <- mapply(help_h, r, g, b)
mapply(help_h, R, G, B)
d <- mapply(help_h, R, G, B)
h <- 60*((G - B) / (max(R, G, B) - min(R, G, B)))
View(h)
e <- mapply(help_h, R, G, B)
e[1:10]
View(h)
nrow(img)
nrow(image)
indx
indx <- index[[37]]
h <- matrix(hsb$h, nrow = nrow(image), ncol = ncol(image))
View(h)
h <- matrix(hsb$h, nrow = nrow(image), ncol = ncol(image))
s <- matrix(hsb$s, nrow = nrow(image), ncol = ncol(image))
b <- matrix(hsb$b, nrow = nrow(image), ncol = ncol(image))
d <- EBImage::Image(eval(parse(text = as.character(ind$Equation[as.character(ind$Index)==indx]))))
plot(d)
max(d)
max(d@.Data)
image(d@.Data)
?image
library(pliman)
img <- image_pliman("sev_leaf.jpg")
dim(img)
(pixels <- img@.Data[1:2, 1:2, 1:3])
sev <- image_pliman("sev_leaf.jpg", plot = TRUE)
ind <-
image_index(sev,
index = "DGCI",
show_image = FALSE)
plot(ind, type = "density")
plot(ind)
sev |> image_horizontal() |> image_index("all")
sev |> image_horizontal() |> image_segment("all")
library(pliman)
img <- image_pliman("sev_leaf.jpg")
dim(img)
(pixels <- img@.Data[1:2, 1:2, 1:3])
sev |> image_horizontal() |> image_segment("all")
measure_disease(img, index_lb = "NB", index_dh = "DGCI")
measure_disease(img, index_lb = "B", index_dh = "DGCI")
measure_disease(img, index_lb = "r", index_dh = "DGCI")
measure_disease(img, index_lb = "R", index_dh = "DGCI")
image_segment(
sev,
index = "NB",
threshold = 0.3
)
image_segment(
sev,
index = "NB",
threshold = 0.5
)
image_segment(
sev,
index = "NB",
threshold = 0.7
)
image_index(image, c("RGB"))
image_index(img, c("RGB"))
sev <- image_import("figs/videira.png")
getwd()
?xaringanExtra::use_logo
?xaringanExtra::use_banner
?xaringanExtra::use_progress_bar
sev <- image_import("figs/videira.png")
knitr::include_graphics('figs/soybean_rust_mask.png')
img <- image_import("slides/pliman_tut/figs/vicia.jpg")
vid <- image_import("slides/pliman_tut/figs/videira.png")
vid <- image_import("slides/pliman_tut/figs/videira.png",
plot = TRUE)
image_index(vid)
measure_disease(vid, index_lb = "B", index_dh = "NGRDI")
image_index(vid, index = "all")
measure_disease(vid, index_lb = "B", index_dh = "SHP")
measure_disease(vid,
index_lb = "B",
index_dh = "GLAI")
measure_disease(vid,
index_lb = "B",
index_dh = "GLAI",
invert = c(FALSE, TRUE))
image_index(vid, index = "GLAI")
measure_disease(vid,
index_lb = "B",
index_dh = "R",
invert = c(FALSE, TRUE))
measure_disease(vid,
index_lb = "B",
index_dh = "R")
measure_disease(vid,
index_lb = "B",
index_dh = "G")
measure_disease(vid,
index_lb = "B",
index_dh = "B")
measure_disease(vid,
index_lb = "B",
index_dh = "NGRDI")
measure_disease(vid,
index_lb = "B",
index_dh = "l")
measure_disease(vid,
index_lb = "B",
index_dh = "DGCI")
measure_disease(vid,
index_lb = "R",
index_dh = "NGRDI")
measure_disease(vid,
index_lb = "R",
index_dh = "NGRDI",
show_original = FALSE)
measure_disease(vid,
index_lb = "B",
index_dh = "NGRDI",
show_original = FALSE)
measure_disease(vid,
index_lb = "G",
index_dh = "NGRDI",
show_original = FALSE)
measure_disease(vid,
index_lb = "G",
index_dh = "NGRDI")
image_segment_iter(vid, nseg = 2)
measure_disease(vid,
index_lb = "G",
index_dh = "G-R")
measure_disease(vid,
index_lb = "G",
index_dh = "G-R",
show_segmentation = TRUE)
fungo <- image_import("slides/pliman_tut/figs/fungo.jpg",
plot = TRUE)
fungo <- image_import("slides/pliman_tut/figs/fungo.jpg",
plot = TRUE)
fungo <- image_import("slides/pliman_tut/figs/fungo.jpeg",
plot = TRUE)
image_index(fungo, index = "all")
image_segment(fungo, index = "BI")
analyze_objects(fungo,
index = "B")
analyze_objects(fungo,
index = "R")
analyze_objects(fungo,
index = "R-B")
analyze_objects(fungo,
index = "R-B", invert = TRUE)
analyze_objects(fungo,
index = "R-B",
invert = TRUE,
filter = 30)
analyze_objects(fungo,
index = "R-B",
invert = TRUE,
filter = 10)
analyze_objects(fungo,
index = "R-B",
invert = TRUE,
filter = 20)
image_segment(fungo, index = "all")
analyze_objects(fungo,
index = "HUE")
analyze_objects(fungo,
index = "HUE", invert = TRUE)
analyze_objects(fungo,
index = "HUE",
invert = TRUE,
filter = 15)
analyze_objects(fungo,
index = "HUE",
invert = TRUE,
filter = 10)
analyze_objects(fungo,
index = "HUE",
invert = TRUE,
filter = 5)
analyze_objects(fungo,
index = "HUE",
invert = TRUE,
filter = 5, watershed = FALSE)
analyze_objects(fungo,
index = "HUE",
invert = TRUE,
filter = 5,
watershed = FALSE,
marker = "area")
x11()
dpi(fungo)
analyze_objects(fungo,
index = "HUE",
invert = TRUE,
filter = 5,
watershed = FALSE,
marker_size = 2)
analyze_objects(fungo,
index = "HUE",
invert = TRUE,
filter = 5,
watershed = FALSE,
contour_size = 2)
analyze_objects(fungo,
index = "HUE",
invert = TRUE,
filter = 5,
watershed = FALSE,
contour_size = 2)
analyze_objects(fungo,
index = "HUE",
invert = TRUE,
filter = 5,
watershed = FALSE,
contour_size = 3)
res <-
analyze_objects(fungo,
index = "HUE",
invert = TRUE,
filter = 5,
watershed = FALSE,
contour_size = 3)
get_measures(res, dpi = 90)
get_measures(res, dpi = 90) |>
plot_measures(measure = "diameter")
get_measures(res, dpi = 90) |>
plot_measures(measure = "diam_mean")
get_measures(res, dpi = 90) |>
plot_measures(measure = "area")
res <-
analyze_objects(fungo,
index = "HUE",
invert = TRUE,
filter = 5,
watershed = FALSE,
contour_size = 3)
get_measures(res, dpi = 90) |>
plot_measures(measure = "area")
get_measures(res, dpi = 90) |>
plot_measures(measure = "area", col = "red")
get_measures(res, dpi = 90) |>
plot_measures(measure = "area", col = "black")
get_measures(res, dpi = 90) |>
plot_measures(measure = "area", col = "black", size = 2)
res <-
analyze_objects(fungo,
index = "HUE",
invert = TRUE,
filter = 5,
watershed = FALSE,
contour_size = 5)
res <-
analyze_objects(fungo,
index = "HUE",
invert = TRUE,
filter = 5,
watershed = FALSE,
contour_size = 10)
res <-
analyze_objects(fungo,
index = "HUE",
invert = TRUE,
filter = 5,
watershed = FALSE,
contour_size = 6)
get_measures(res, dpi = 90) |>
plot_measures(measure = "area", col = "black", size = 2)
set_wd_here()
fungo <-
image_import("figs/fungo.jpeg",
plot = TRUE)
res <-
analyze_objects(fungo,
index = "HUE",
invert = TRUE,
filter = 5,
watershed = FALSE,
contour_size = 6)
get_measures(res, dpi = 90) |>
plot_measures(measure = "area", col = "black", size = 2)
3.14 * 2.2^2
3.14 * 2.5^2
img <- image_import("figs/vicia.jpg")
vicia <- analyze_objects(img, index = "B")
vicia$statistics[1,]
?use_banner
cell <- image_import("figs/cell.jpg")
vicia <- analyze_objects(cell, index = "B")
cell <- analyze_objects(cell, index = "B")
cell <- analyze_objects(cell, index = "G")
cell <- image_import("figs/cell.jpg")
tmp <- analyze_objects(cell, index = "G")
tmp <-
analyze_objects(cell,
index = "G",
invert = TRUE,
show_segmentation = TRUE,
show_contour = FALSE,
marker = "id",
marker_col = "black")
tmp <-
analyze_objects(cell,
index = "G",
invert = TRUE,
show_segmentation = TRUE,
show_contour = FALSE,
marker = "id",
marker_col = "red")
tmp <-
analyze_objects(cell,
index = "G",
invert = TRUE,
show_segmentation = TRUE,
show_contour = FALSE,
marker = "id",
marker_col = "white")
tmp <-
analyze_objects(cell,
index = "G",
invert = TRUE,
show_segmentation = TRUE,
show_contour = FALSE,
marker = "id",
marker_col = "black"
marker_size = 1)
tmp <-
analyze_objects(cell,
index = "G",
invert = TRUE,
show_segmentation = TRUE,
show_contour = FALSE,
marker = "id",
marker_col = "black",
marker_size = 1)
tmp <-
analyze_objects(cell,
index = "G",
invert = TRUE,
show_segmentation = TRUE,
show_contour = FALSE,
marker = "id",
marker_col = "black",
marker_size = 0.5)
tmp <-
analyze_objects(cell,
index = "G",
invert = TRUE,
show_segmentation = TRUE,
# show_contour = FALSE,
marker = "id",
marker_col = "black",
marker_size = 0.5)
tmp$statistics[1,]
la <- image_import("figs/leaves.jpg", plot = TRUE)
la_res <-
analyze_objects(la,
watershed = FALSE,
marker = "area",
col_background = "blue")
area <- get_measures(la_res, dpi = 72)
plot_measures(area,
measure = "area",
vjust = -30)
la <- image_import("figs/flax.jpg", plot = TRUE)
fla <- image_import("figs/flax.jpg", plot = TRUE)
fla <- image_import("figs/flax.jpg", plot = TRUE)
analyze_objects(fla,
reference = TRUE,
reference_area = 20,
marker = "length")
print_table
library(DT)
# Function to make HTML tables
print_table <- function(table, rownames = FALSE, digits = 3, ...){
datatable(table, rownames = rownames, extensions = 'Buttons',
options = list(scrollX = TRUE,
pageLength = 6,
dom = '<<t>Bp>',
buttons = c('copy', 'excel', 'print')), ...)}
ind <- read.csv(file = system.file("indexes.csv",
package = "pliman",
mustWork = TRUE),
header = T,
sep = ";")
print_table(ind[,1:2])
res <-
analyze_objects(fla,
reference = TRUE,
reference_area = 20,
marker = "length")
fla <- image_import("figs/flax.jpg", plot = TRUE) |> image_resize(50)
res <-
analyze_objects(fla,
reference = TRUE,
reference_area = 20,
marker = "length")
print_table(res$results)
apply(res$results, 2, round, digits = 2)
apply(res$results, 2, round, digits = 2) |> print_table()
apply(res$results, 2, round, digits = 2) |> print_table()
esverdeado <- image_import("figs/esverdeado.jpg", plot = T)
rgb_soja <-
analyze_objects(esverdeado,
object_index = "B")
rgb_soja <-
analyze_objects(esverdeado,
object_index = "B")
indice <- summary_index(rgb_soja, cut_point = 0.3)
indice
plot_measures(rgb_soja,
measure = "B",
id = indice$ids,
col = "black")
View(indice)
indice <- summary_index(rgb_soja,
index = "B",
cut_point = 0.3)
rgb_soja <-
analyze_objects(esverdeado,
object_index = "B")
plot_measures(rgb_soja,
measure = "B",
id = indice$ids,
col = "black")
rgb_soja <-
analyze_objects(esverdeado,
object_index = "DGCI")
plot_measures(rgb_soja,
measure = "DGCI",
# id = indice$ids,
col = "black")
rgb_soja <-
analyze_objects(esverdeado,
object_index = "DGCI")
indice <- summary_index(rgb_soja,
index = "DGCI",
cut_point = 0.25)
View(rgb_soja)
View(rgb_soja[["object_rgb"]])
View(rgb_soja[["object_index"]])
indice <- summary_index(rgb_soja,
index = "DGCI",
cut_point = 0.25)
plot_measures(rgb_soja,
measure = "DGCI",
# id = indice$ids,
col = "black")
fla <- image_import("figs/flax.jpg", plot = TRUE) |> image_resize(50)
lin <-
analyze_objects(fla,
reference = TRUE,
reference_area = 20,
object_index = "DGCI")
plot_measures(lin, measure = "DGCI")
