segment = TRUE,
fill_hull = FALSE,
show_segmentation = FALSE,
lesion_size = "large")
a <-
measure_disease(img,
# index_lb = "B",
# index_dh = "NGRDI",
img_healthy = "h_img1",
img_symptoms = "d_img1",
img_background = "b_img1",
show_features = TRUE,
show_image = TRUE,
show_contour = T,
segment = TRUE,
fill_hull = FALSE,
show_segmentation = FALSE)
a <-
measure_disease(img,
# index_lb = "B",
# index_dh = "NGRDI",
img_healthy = "h_img1",
img_symptoms = "d_img1",
img_background = "b_img1",
show_features = TRUE,
show_image = TRUE,
show_contour = T,
segment = TRUE,
fill_hull = TRUE,
show_segmentation = FALSE)
a <-
measure_disease(img,
# index_lb = "B",
# index_dh = "NGRDI",
img_healthy = "h_img1",
img_symptoms = "d_img1",
img_background = "b_img1",
show_features = TRUE,
show_image = TRUE,
show_contour = T,
segment = TRUE,
fill_hull = FALSE,
show_segmentation = FALSE)
View(a)
a <-
measure_disease(img,
# index_lb = "B",
# index_dh = "NGRDI",
img_healthy = "h_img1",
img_symptoms = "d_img1",
img_background = "b_img1",
show_features = TRUE,
show_image = TRUE,
show_contour = T,
segment = TRUE,
show_segmentation = FALSE)
View(a)
a <-
measure_disease(img,
# index_lb = "B",
# index_dh = "NGRDI",
img_healthy = "h_img1",
img_symptoms = "d_img1",
img_background = "b_img1",
show_features = TRUE,
show_image = TRUE,
show_contour = T,
segment = TRUE,
show_segmentation = FALSE,
lesion_size = "small")
a <-
measure_disease(img,
# index_lb = "B",
# index_dh = "NGRDI",
img_healthy = "h_img1",
img_symptoms = "d_img1",
img_background = "b_img1",
# show_features = TRUE,
show_image = TRUE)
a <-
measure_disease(img,
# index_lb = "B",
# index_dh = "NGRDI",
img_healthy = "h_img1",
img_symptoms = "d_img1",
img_background = "b_img1",
# show_features = TRUE,
show_image = TRUE,
show_contour = FALSE)
a <-
measure_disease(img,
img_healthy = "h_img1",
img_symptoms = "d_img1",
img_background = "b_img1",
show_features = TRUE,
show_image = TRUE,
segment = TRUE,
show_contour = FALSE)
a <-
measure_disease(img,
img_healthy = "h_img1",
img_symptoms = "d_img1",
img_background = "b_img1",
show_features = TRUE,
show_image = TRUE,
segment = TRUE,
show_contour = T)
setwd("E:/Desktop/UFSC/cursos/slides_R")
750/150
library(pliman)
?image_pliman
?pliman_images
image_index(img, "B")
soy <- image_import("soybean_touch.jpg", plot = TRUE)
soy <- image_pliman("soybean_touch.jpg", plot = TRUE)
# computar os Ã­ndices
indexes <- image_index(soy, index = c("R, G, B, NR, NG, NB"))
# Create a raster plot with the RGB values
plot(indexes)
# Create a histogram with the RGB values
plot(indexes, type = "hist")
image_segment(img, "G")
image_segment(soy, "G")
image_segment(soy, "NB")
plot(img)
sev <- image_pliman("sev_leaf.jpg", plot = TRUE)
ind <- image_index(soy, index = "B")
ind <- image_index(sev, index = "B")
plot(ind, type = "hist")
ind <- image_index(sev, index = "B")
plot(ind, type = "hist")
img <- image_pliman("sev_leaf.jpg", plot = TRUE)
B_mat <- sev@.Data[,,3]
B_df <- data.frame(B = as.numeric(B_mat))
ggplot(B_df, aes(x = B)) +
geom_density(fill = "red", alpha = 0.6) +
theme_gray(base_size = 22)
library(tidyverse)
ggplot(B_df, aes(x = B)) +
geom_density(fill = "red", alpha = 0.6) +
theme_gray(base_size = 22)
ind <- image_index(sev, index = "R")
plot(ind, type = "hist")
B_mat <- sev@.Data[,,1]
B_df <- data.frame(B = as.numeric(B_mat))
ggplot(B_df, aes(x = B)) +
geom_density(fill = "red", alpha = 0.6) +
theme_gray(base_size = 22)
ind <- image_index(sev, index = "G")
plot(ind, type = "hist")
B_mat <- sev@.Data[,,2]
B_df <- data.frame(B = as.numeric(B_mat))
ggplot(B_df, aes(x = B)) +
geom_density(fill = "red", alpha = 0.6) +
theme_gray(base_size = 22)
B_mat <- sev@.Data[,,3]
B_df <- data.frame(B = as.numeric(B_mat))
ggplot(B_df, aes(x = B)) +
geom_density(fill = "red", alpha = 0.6) +
theme_gray(base_size = 22)
plot(ind, type = "hist")
B_mat <- sev@.Data[,,3]
B_df <- data.frame(B = as.numeric(B_mat))
ggplot(B_df, aes(x = B)) +
geom_density(fill = "red", alpha = 0.6) +
theme_gray(base_size = 22)
range(B_mat)
ind <- image_index(sev, index = "B")
plot(ind, type = "hist")
B_mat <- sev@.Data[,,3]
B_df <- data.frame(B = as.numeric(B_mat))
ggplot(B_df, aes(x = B)) +
geom_density(fill = "red", alpha = 0.6) +
theme_gray(base_size = 22)
B_mat <- sev@.Data[,,2]
B_df <- data.frame(B = as.numeric(B_mat))
ggplot(B_df, aes(x = B)) +
geom_density(fill = "red", alpha = 0.6) +
theme_gray(base_size = 22)
a <- channel(img, "green")
plot(a)
ind <- image_index(sev, index = "B")
ind <- image_index(sev, index = "B", resize = FALSE)
ind <- image_index(sev, index = "G", resize = F)
a <- channel(img, "blue")
plot(a)
library(pliman)
library(tidyverse)
sev <- image_pliman("sev_leaf.jpg", plot = TRUE)
ind <- image_index(sev, index = "G")
ind <- image_index(sev, index = "B")
ind <- image_index(sev, index = "G")
plot(ind, type = "hist")
ind <- image_index(sev, index = "B")
plot(ind, type = "hist")
B_mat <- sev@.Data[,,3]
B_df <- data.frame(B = as.numeric(B_mat))
ggplot(B_df, aes(x = B)) +
geom_density(fill = "red", alpha = 0.6) +
theme_gray(base_size = 22)
plot(ind, type = "raster")
plot(ind, type = "a")
image_index(img, index = "B")
image_segment(img,
index = "B",
threshold = 0.5,
invert = TRUE)
image_segment(img,
index = "B",
threshold = 0.5)
image_segment(img,
index = "B",
threshold = 0.3)
indexes <-
image_index(img,
index = "NB",
show_image = FALSE)
plot(indexes)
plot(indexes, type = "hist")
image_segment(img,
index = "B")
image_segment(img, index = "all", ncol = 6)
indexes <-
image_index(img,
index = "HUE2",
show_image = FALSE)
indexes <-
image_index(img,
index = "HUE2",
show_image = T)
indexes <-
image_index(img,
index = "NB",
show_image = FALSE)
plot(indexes)
image_segment(
img,
index = "NB",
threshold = 0.3
)
image_segment(
img,
index = "NB",
threshold = 0.5
)
image_segment(
img,
index = "NB",
threshold = 0.7
)
image_segment_iter(img,
nseg = 2,
index = c("NB", "GLI"),
ncol = 3)
image_segment_iter(img,
nseg = 2,
index = c("NB", "GLI"),
ncol = 3,
threshold = c("otsu", 0.2))
image_segment_iter(img,
nseg = 2,
index = c("NB", "GLI"),
ncol = 3,
threshold = c("Otsu", 0.2))
image_segment_iter(img,
nseg = 2,
index = c("NB", "GLI"),
ncol = 3,
threshold = c("Otsu", 0.3))
image_segment_iter(img,
nseg = 2,
index = c("NB", "GLI"),
ncol = 3,
threshold = c("Otsu", 0.15))
image_segment_iter(img,
nseg = 2,
index = c("NB", "GLI"),
ncol = 3,
threshold = c("Otsu", 0.2))
image_segment_iter(img,
nseg = 2,
index = c("NB", "GLI"),
ncol = 3,
threshold = c("Otsu", 0.25))
image_segment_iter(img,
nseg = 2,
index = c("NB", "GLI"),
ncol = 3,
threshold = c("Otsu", "Otsu"))
image_segment_iter(img,
nseg = 2,
index = c("NB", "GLI"),
ncol = 3,
threshold = c("Otsu", 0.2))
knitr::include_graphics("figs/table_pliman.png")
getwd()
setwd("E:/Desktop/UFSC/cursos/slides_R/slides/pliman_omegads")
knitr::include_graphics("figs/table_pliman.png")
soy <- image_pliman("soybean_touch.jpg", plot = TRUE)
image_binary(img)
image_binary(img, ncol = 2)
image_binary(soy, ncol = 2)
image_binary(soy, ncol = 2, resize = 30)
image_binary(soy, ncol = 2, resize = 10)
image_binary(soy, ncol = 2, resize = 200)
image_binary(soy, ncol = 2)
sev <- image_pliman("sev_leaf.jpg", plot = TRUE)
sev <- image_pliman("sev_leaf.jpg", plot = TRUE)
ind <- image_index(sev, index = "B")
plot(ind, type = "hist")
plot(ind, type = "raster")
image_index(img, index = "B")
image_segment(img, index = "B")
ind <- image_index(sev, index = "B")
image_index(img, index = "B")
image_segment(img, index = "B")
sev <- image_pliman("sev_leaf.jpg", plot = TRUE)
ind <- image_index(sev, index = "B")
plot(ind, type = "hist")
sev <- image_pliman("sev_leaf.jpg", plot = TRUE)
plot(ind, type = "raster")
ind <- image_index(sev, index = "B")
plot(ind, type = "hist")
ind <- image_index(sev, index = "B", show_image = FALSE)
plot(ind, type = "hist")
image_index(img, index = "B")
image_segment(img, index = "B")
read.csv(file = system.file("indexes.csv",
package = "pliman",
mustWork = TRUE),
header = T,
sep = ";")
image_segment(img, index = "all", ncol = 6)
image_segment_iter(img,
nseg = 2,
index = c("NB", "GLI"),
ncol = 3,
threshold = c("Otsu", 0.2))
image_segment_iter(sev,
nseg = 2,
index = c("NB", "GLI"),
ncol = 3,
threshold = c("Otsu", 0.2))
plot(soy)
image_index(img, "NB")
image_index(soy, "NB")
image_binary(img, "NB", resize = FALSE)
image_binary(soy, "NB", resize = FALSE)
knitr::include_graphics('figs/vicia.jpg')
plot(knitr::include_graphics('figs/vicia.jpg'))
img <- image_import("figs/vicia.jpg")
analyze_objects(img)
vicia <- analyze_objects(img, index = "G")
vicia$statistics
vicia <- analyze_objects(img, index = "B")
vicia$statistics
getwd()
la <- image_pliman("la_leaves.jpg", plot = TRUE)
img
la <- analyze_objects(img, index = "B")
la <- analyze_objects(la, index = "B")
la <- image_pliman("la_leaves.jpg", plot = TRUE)
la <- analyze_objects(la, index = "B")
la <-
analyze_objects(la,
watershed = FALSE,
index = "B")
la <- image_pliman("la_leaves.jpg", plot = TRUE)
la_res <-
analyze_objects(la,
watershed = FALSE,
index = "B")
area <- get_measures(la_res, dpi = 150)
plot_measures(area)
la_res <-
analyze_objects(la,
watershed = FALSE,
index = "B",
show_image = FALSE)
area <- get_measures(la_res, dpi = 150)
image_segment(la)
image_segment(la, "B")
plot_measures(area, "area")
area <- get_measures(la_res, dpi = 85)
image_segment(la, "B")
plot_measures(area, "area")
area <- get_measures(la_res, dpi = 90)
image_segment(la, "B")
plot_measures(area, "area")
area <- get_measures(la_res, dpi = 86)
image_segment(la, "B")
plot_measures(area, "area")
area <- get_measures(la_res, dpi = 100)
image_segment(la, "B")
plot_measures(area, "area")
area <- get_measures(la_res, dpi = 72)
image_segment(la, "B")
plot_measures(area, "area")
la <- image_pliman("potato.jpg", plot = TRUE)
la <- image_pliman("potato_leaves.jpg", plot = TRUE)
image_vertical(potato, plot = TRUE)
potato <- image_pliman("potato_leaves.jpg", plot = TRUE)
image_vertical(potato, plot = TRUE)
potato_res <-
analyze_objects(potato_res,
watershed = FALSE)
potato_res <-
analyze_objects(potato,
watershed = FALSE)
potato_res <-
analyze_objects(potato,
show_chull = TRUE,
watershed = FALSE)
shape <- get_measures(area)
shape <- get_measures(potato_res)
plot_measures(shape, "solidity")
potato_res <-
analyze_objects(potato,
show_chull = TRUE,
watershed = FALSE)
shape <- get_measures(potato_res)
plot_measures(shape, "solidity")
shape <- get_measures(potato_res)
print_table <- function(table, rownames = FALSE, ...){
datatable(table, rownames = rownames, extensions = 'Buttons',
options = list(scrollX = TRUE,
dom = '<<T>Bp>',
buttons = c('copy', 'excel')), ...)
}
library(DT)
print_table <- function(table, rownames = FALSE, ...){
datatable(table, rownames = rownames, extensions = 'Buttons',
options = list(scrollX = TRUE,
dom = '<<T>Bp>',
buttons = c('copy', 'excel')), ...)
}
print_table(shape)
shape <- get_measures(potato_res)
print_table(shape)
datatable(shape)
print_table(shape)
print_table <- function(table, rownames = FALSE, ...){
datatable(table, rownames = rownames, extensions = 'Buttons',
options = list(scrollX = FALSE,
dom = '<<T>Bp>',
buttons = c('copy', 'excel')), ...)
}
print_table(shape)
print_table <- function(table, rownames = FALSE, ...){
datatable(table, rownames = rownames, extensions = 'Buttons',
options = list(scrollX = FALSE,
# dom = '<<T>Bp>',
buttons = c('copy', 'excel')), ...)
}
print_table(shape)
print_table <- function(table, rownames = FALSE, ...){
datatable(table, rownames = rownames, extensions = 'Buttons',
options = list(scrollX = TRUE,
# dom = '<<T>Bp>',
buttons = c('copy', 'excel')), ...)
}
print_table(shape)
print_table <- function(table, rownames = FALSE, ...){
datatable(table, rownames = rownames, extensions = 'Buttons',
options = list(scrollX = TRUE,
dom = '<Bp>',
buttons = c('copy', 'excel')), ...)
}
print_table(shape)
print_table <- function(table, rownames = FALSE, digits = 3, ...){
datatable(table, rownames = rownames, extensions = 'Buttons',
options = list(scrollX = TRUE,
dom = '<<t>Bp>',
buttons = c('copy', 'excel', 'pdf', 'print')), ...) %>%
formatSignif(columns = c(as.numeric(which(sapply(table, class) == "numeric"))), digits = digits)}
print_table(shape)
print_table <- function(table, rownames = FALSE, digits = 3, ...){
datatable(table, rownames = rownames, extensions = 'Buttons',
options = list(scrollX = TRUE,
dom = '<<t>Bp>',
buttons = c('copy', 'excel', 'print')), ...) %>%
formatSignif(columns = c(as.numeric(which(sapply(table, class) == "numeric"))), digits = digits)}
print_table(shape)
print_table <- function(table, rownames = FALSE, digits = 3, ...){
datatable(table, rownames = rownames, extensions = 'Buttons',
options = list(scrollX = TRUE,
dom = '<<T>Bp>',
buttons = c('copy', 'excel', 'print')), ...) %>%
formatSignif(columns = c(as.numeric(which(sapply(table, class) == "numeric"))), digits = digits)}
print_table(shape)
if(require(devtools)){install.packages("devtools")}
200*200
library(pliman)
?image_index
img <- image_pliman("soybean_touch.jpg")
image_index(img, index = c("R, NR"))
img <- image_pliman("soybean_touch.jpg")
image_index(img, index = c("R, SAT"))
if(require(devtools)){
install.packages("devtools")
}
if(require(devtools)){print("a")}
if(!require(devtools)){print("a")}
# instalaÃ§Ã£o do github
if(!require(devtools)){
install.packages("devtools")
}
detach("package:devtools", unload = TRUE)
# instalaÃ§Ã£o do github
if(!require(devtools)){
install.packages("devtools")
}
